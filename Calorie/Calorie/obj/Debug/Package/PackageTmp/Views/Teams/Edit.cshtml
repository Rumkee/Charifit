@model Calorie.Models.Teams.EditTeamVM



<div class="panel editTeam">
    <div class="panel-body">


        @using (Html.BeginForm(null, null, FormMethod.Post, new {id = "EditTeamForm"}))
        {
            @Html.AntiForgeryToken()

            @*validation*@
            <div class="row">
                <div class="col-xs-12">
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                </div>

                <br/>


                @Html.HiddenFor(model => model.TeamID)


                @*Name*@


                <div class="col-xs-12 col-sm-8 col-sm-offset-2 has-feedback open">
                    <h6 class="InputLabel">Team Name</h6>
                </div>

                <div id="TeamnameInputGroup" class="col-xs-12 col-sm-8 col-sm-offset-2 has-feedback open">

                    <input class="form-control user-success" data-val="true" data-val-required="Team name field is required." id="TeamnameInput" name="Name" type="text" value="@Model.Team.Name">
                    <span id="TeamnameInputResult" class="form-control-feedback" ></span>
                    <h6 class="text-danger" id="TeamnameValidationMsg" >Team name is already in use</h6>

                </div>


                <br/>




                @*Description*@

                <div class="col-xs-12 col-sm-8 col-sm-offset-2">
                    <h6>Description</h6>
                    <div id="StoryTextEditor">@Html.Raw(Model.Team.Description)</div>
                    @Html.ValidationMessageFor(model => Model.Team.Description, "", new {@class = "text-danger"})
                    @Html.HiddenFor(model => model.Description)

                    <script>
                        new calorie.textEditor('StoryTextEditor', 'Description', 'EditTeamForm');
                    </script>

                </div>

                <br/>




                @*Image*@

                <div class="col-xs-12 col-sm-8 col-sm-offset-2">
                    @Html.HiddenFor(m => m.TeamImageID, new {@class = "form-control "})
                    <h6 class="InputLabel">Team Picture</h6>
                    @Html.Partial("..\\Image\\_ImageUpload", new Calorie.Models.CalorieImageUpload() {CurrentImageID = Model.Team.ImageID, ThisElementID = "TeamPictureDiv", HiddenForElementID = "TeamImageID", Type = Calorie.Models.CalorieImage.ImageType.TeamImage})

                </div>

                <br/>


                <div class="col-xs-12 col-sm-8 col-sm-offset-2">
                    <br/>
                    <h6>Availability</h6>
                    @Html.EnumDropDownListFor(model => model.Availability, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Availability, "", new {@class = "text-danger"})

                </div>

                <br/>

                @*Save button*@
                <div class="form-group">
                    <div class="col-xs-12">
                        <input type="submit" id="saveBtn" class="btn btn-default pull-right" value="Save"/>
                    </div>
                </div>


            </div>


        }@*form*@

    </div>
</div>


<script src="~/Scripts/Calorie/Teams/Edit.js"></script>
<script>
    var currentTeamName = '@Model.Team.Name';
    var checkTeamNameURL = '@Url.Action("CheckTeamName", "Teams")';
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

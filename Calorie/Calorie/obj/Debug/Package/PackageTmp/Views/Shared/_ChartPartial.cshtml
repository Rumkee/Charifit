
@model Calorie.BusinessLogic.ChartLogic.chartData 

@{ 
    var ID = Guid.NewGuid().ToString().Replace("-", "");
    var hasData = Model.getTotal(false) > 0;
}
<div class="col-xs-12 col-sm-6 ">
    <div class="panel">
        <div class="panel-body">
            <div class="row">
                <div class="col-xs-5">
                    @if (!string.IsNullOrEmpty(Model.Name))
                    {
                        <h5>@Html.Raw(@Model.Name)</h5>
                    }

                </div>
                <div class="col-xs-7">
                    <div class="btn-group pull-right">
                        <div class="btn btn-sm btn-default " id="pieBtn-@ID"><i class="fa fa-pie-chart"></i>
                        </div>
                        <div class="btn btn-sm btn-default " id="barBtn-@ID" ><i class="fa fa-bar-chart"></i>
                        </div>
                    </div>

                </div>
            </div>

            @if (!hasData)
            {
                <h6><i>No Data</i></h6>
            }
            else
            {
                <div id="barDiv-@ID" style="display: none">
                    @Html.Partial("..\\Pledges\\Charts\\_BarChart", new Calorie.Models.Misc.BarChartVM() {Data = @Model, Animate = true})
                </div>
                <div id="pieDiv-@ID">
                    @Html.Partial("..\\Pledges\\Charts\\_DonutChart", new Calorie.Models.Misc.DonutChartVM(@Model, false) {ShowLabels = true})
                </div>
            }


        </div>
    </div>
</div>
<script>
    new calorie.charts.chartToggleButtons($('#barDiv-@ID'),
                                          $('#pieDiv-@ID'),
                                          $('#barBtn-@ID'),
                                          $('#pieBtn-@ID'));
</script>
